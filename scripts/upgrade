#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action="stop"

if $(ynh_compare_current_package_version --comparison gt --version "0.2.0~ynh1")
then
    pushd $install_dir
        redis-cli --rdb "/tmp/redis-$app.rdb" -p $port_redis
    popd

    ynh_systemctl --service=redis-$app --action="stop" --log_path="/var/log/$app/redis-$app.log"
fi

#=================================================
# INSTALL NODEJS
#=================================================
ynh_script_progression "Installing dependencies..."

ynh_nodejs_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

# FIXME: this is still supported but the recommendation is now to *always* re-setup the app sources wether or not the upstream sources changed
if ynh_app_upstream_version_changed
then
	ynh_script_progression "Upgrading source files..."

	ynh_safe_rm "$install_dir"
	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir"

	# restore db backup
	if $(ynh_compare_current_package_version --comparison gt --version "0.2.0~ynh1")

    then
        mv /tmp/redis-$app.rdb $install_dir/redis-$app.rdb
    fi
fi

# FIXME: this is still supported but the recommendation is now to *always* re-setup the app sources wether or not the upstream sources changed
if ynh_app_upstream_version_changed
then
	pushd $install_dir

		ynh_hide_warnings npm install
	popd
fi

#=================================================
# MIGRATE DATABASE
#=================================================
ynh_script_progression "migrating database... $(_ynh_apt_package_versionscrumblr)"

echo "$(_ynh_apt_package_versionsrumblr)"

if $(ynh_app_upgrading_from_version_before 0.2.0~ynh2)

then
    pushd $install_dir
        redis-cli --rdb "redis-$app.rdb"
    popd
fi

#=================================================
# REDIS CONFIGURATION
#=================================================

ynh_config_add --template="redis.conf" --destination="$install_dir/redis.conf"

redis_service="redis-$app"
ynh_config_add_systemd --service $redis_service --template "scrumblr_redis.service"

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 750 "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:$app "$install_dir"
#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression "Upgrading NGINX web server configuration..."

# Create a dedicated NGINX config
ynh_config_add_nginx

ynh_config_add_systemd

# Use logrotate to manage app-specific logfile(s)
ynh_config_add_logrotate

#fix log directory owner
#REMOVEME? Assuming ynh_config_add_logrotate is called, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:$app /var/log/$app

yunohost service add $app --description="Software for notes" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service=$app --action="start" --log_path="systemd" --wait_until="Server running at"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
